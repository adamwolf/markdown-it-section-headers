name: 'Handle PRs merged into main'
on:
  pull_request:
    branches:
      - main
    types:
      - closed
jobs:
  make_prs:
    name: 'Make PR that bumps version'
    if: github.event.pull_request.merged == true && (!contains(github.event.pull_request.labels.*.name, 'nobump') && !contains(github.event.pull_request.labels.*.name, 'release'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
      - name: git config
        run: |
          git config --global user.email "actions@users.noreply.github.com"
          git config --global user.name "Automated GitHub Actions Bot"
      - name: Bump version and commit
        run: npm version prerelease -m "Bump version to %s"
      - name: Store new version
        run: echo "NEWVERSION=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV
      - run: git log
      - name: Create new branch
        run: git checkout -b "$NEWVERSION"
      - name: Push branch
        run: git push origin "$NEWVERSION"
      - name: Make PR
        run: gh pr create --title "Bump version to $NEWVERSION" --body 'Autocreated by GitHub Actions' --label 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_FOR_MAKING_PRS }}
  lint-and-test:
    uses: ./.github/workflows/test.yml
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
  publish:
    name: 'Publish to GitHub Packages'
    needs: lint-and-test
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm ci
      - name: Set up npm to publish to GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=\${NODE_AUTH_TOKEN}" > .npmrc
          echo "@adamwolf:registry=https://npm.pkg.github.com" >> .npmrc
          echo "always-auth=true" >> .npmrc
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}